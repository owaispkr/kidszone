{"version":3,"sources":["assets/img/kidZone_logo.png","data/games_iframe.js","components/Layout/PlayGame.js","components/Layout/Games.js","components/Layout/Dashboard.js","components/Layout/Nav.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","games_iframe","iframe","name","imgsrc","description","PlayGame","Grid","container","justify","spacing","id","style","margin","paddingBottom","dangerouslySetInnerHTML","__html","useStyles","makeStyles","theme","root","width","media","height","widht","title","color","palette","primary","main","Games","useState","gameiframe","setgameiframe","classes","map","data","key","item","xs","sm","lg","Card","CardActionArea","CardMedia","className","image","CardContent","Typography","gutterBottom","variant","component","CardActions","Button","size","onClick","elmntToView","document","getElementById","setTimeout","scrollIntoView","onButtonClick","Dashboard","Container","maxWidth","Nav","direction","src","logo","alt","display","createMuiTheme","background","default","App","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,0C,wHCgD5BC,EAhDM,CACnB,CACEC,OACE,8LACFC,KAAM,cACNC,OACE,+EACFC,YACE,4MAEJ,CACEH,OACE,qMACFC,KAAM,oBACNC,OACE,+EACFC,YACE,0KAEJ,CACED,OACE,+EACFD,KAAM,gBACND,OACE,gMACFG,YACE,+HAEJ,CACED,OACE,+EACFD,KAAM,WACND,OACE,4LACFG,YACE,8IAEJ,CACED,OACE,+EACFD,KAAM,YACND,OACE,4LACFG,YACE,+I,wEC7BSC,EAZE,SAACJ,GAChB,OACE,kBAACK,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,SAAUC,QAAS,GAC1C,yBACEC,GAAG,cACHC,MAAO,CAAEC,OAAQ,OAAQC,cAAe,QACxCC,wBAAyB,CAAEC,OAAQd,EAAOA,YCM5Ce,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJP,OAAQM,EAAMT,QAAQ,GACtBW,MAAO,KAETC,MAAO,CACLC,OAAQ,IACRC,MAAO,KAETC,MAAO,CACLC,MAAOP,EAAMQ,QAAQC,QAAQC,UAuElBC,EAnED,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACXC,EADW,KACCC,EADD,KAYZC,EAAUjB,IAChB,OACE,6BACE,kBAAC,EAAD,CAAUf,OAAQ8B,IAClB,kBAAC,EAAD,MACA,kBAACzB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,SAAUC,QAAS,GACzCT,EAAakC,KAAI,SAACC,EAAMC,GACvB,OACE,kBAAC9B,EAAA,EAAD,CAAM8B,IAAKA,EAAKC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvC,6BACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,UAAWX,EAAQZ,MACnBwB,MAAOV,EAAKhC,OACZqB,MAAOW,EAAKjC,OAEd,kBAAC4C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,cAAY,EACZC,QAAQ,KACRC,UAAU,KACVN,UAAWX,EAAQT,OAElBW,EAAKjC,MAER,kBAAC6C,EAAA,EAAD,CACEE,QAAQ,QACRxB,MAAM,gBACNyB,UAAU,KAETf,EAAK/B,eAIZ,kBAAC+C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLJ,QAAQ,YACRxB,MAAM,YACN6B,QAAS,kBAjDP,SAACrD,GACrB+B,EAAc/B,GACd,IAAMsD,EAAcC,SAASC,eAAe,eAE5CC,YAAW,WACTH,EAAYI,mBACX,KA2C8BC,CAAczB,EAAKlC,UAJpC,kB,QC/DL4D,EAVG,WAChB,OACE,6BACE,kBAACC,EAAA,EAAD,CAAWC,SAAS,KAAKnB,UAAU,aACjC,kBAAC,EAAD,S,iBCUOoB,MAdf,WACE,OACE,6BACE,kBAAC1D,EAAA,EAAD,CAAMC,WAAS,EAAC0D,UAAU,OACxB,yBACEC,IAAKC,IACLC,IAAI,WACJzD,MAAO,CAAES,MAAO,QAASR,OAAQ,OAAQyD,QAAS,c,wBCC7CnD,EAVDoD,YAAe,CAC3B7D,QAAS,EACTiB,QAAS,CACPC,QAAS,CAAEC,KAAM,WACjB2C,WAAY,CACVC,QAAS,cCaAC,MAZf,WACE,OACE,yBAAK7B,UAAU,OACb,kBAAC8B,EAAA,EAAD,CAAexD,MAAOA,GACpB,kBAACyD,EAAA,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCFYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF3B,SAASC,eAAe,SD0HpB,kBAAmB2B,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e674feaf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/kidZone_logo.1b91038d.png\";","const games_iframe = [\r\n  {\r\n    iframe:\r\n      \"<iframe src='https://wanted5games.com/games/html5/dune-surfer-new-en-s-iga-cloud/index.html?pub=10' name='cloudgames-com' width='590' height='360' frameborder='0' scrolling='no'></iframe>\",\r\n    name: \"Dune Surfer\",\r\n    imgsrc:\r\n      \"https://s3-eu-west-1.amazonaws.com/wanted5games-games-live/game-img/8590.png\",\r\n    description:\r\n      \"It’s a ball.. it’s a stickman… it’s a dune surfer! Go from ball, to stickman, to ball, to stickman as you draw, surf and slide your way out of the dunes, dune surfer stickman dude!\",\r\n  },\r\n  {\r\n    iframe:\r\n      \"<iframe src='https://wanted5games.com/games/html5/little-big-runners-new-en-s-iga-cloud/index.html?pub=10' name='cloudgames-com' width='950' height='630' frameborder='0' scrolling='no'></iframe>\",\r\n    name: \"Little Big Runner\",\r\n    imgsrc:\r\n      \"https://s3-eu-west-1.amazonaws.com/wanted5games-games-live/game-img/8497.png\",\r\n    description:\r\n      \"Little Big Runners is an endless runner game that has the ability to grow bigger or become smaller to find a way through the obstacles and escape the chasing monster.\",\r\n  },\r\n  {\r\n    imgsrc:\r\n      \"https://s3-eu-west-1.amazonaws.com/wanted5games-games-live/game-img/8562.png\",\r\n    name: \"Jungle Bricks\",\r\n    iframe:\r\n      \"<iframe src='https://wanted5games.com/games/html5/jungle-bricks-new-en-s-iga-cloud/index.html?pub=10' name='cloudgames-com' width='500' height='695' frameborder='0' scrolling='no'></iframe>\",\r\n    description:\r\n      \"The Lihzahrd Brick is the building block of Jungle Temples. Lihzahrd Brick can be made into furniture at a Lihzahrd Furnace\",\r\n  },\r\n  {\r\n    imgsrc:\r\n      \"https://s3-eu-west-1.amazonaws.com/wanted5games-games-live/game-img/8584.png\",\r\n    name: \"Jumpdown\",\r\n    iframe:\r\n      \"<iframe src='https://wanted5games.com/games/html5/jump-down-new-en-s-iga-cloud/index.html?pub=10' name='cloudgames-com' width='500' height='727' frameborder='0' scrolling='no'></iframe>\",\r\n    description:\r\n      \"One-tap easy-to-learn controls, rich visual effects and addictive gameplay mechanics. Carefully maneuver through tiles, or meet your doom!\",\r\n  },\r\n  {\r\n    imgsrc:\r\n      \"https://s3-eu-west-1.amazonaws.com/wanted5games-games-live/game-img/8550.png\",\r\n    name: \"Darts Pro\",\r\n    iframe:\r\n      \"<iframe src='https://wanted5games.com/games/html5/darts-pro-new-en-s-iga-cloud/index.html?pub=10' name='cloudgames-com' width='670' height='600' frameborder='0' scrolling='no'></iframe>\",\r\n    description:\r\n      \"One-tap easy-to-learn controls, rich visual effects and addictive gameplay mechanics. Carefully maneuver through tiles, or meet your doom!\",\r\n  },\r\n];\r\n\r\nexport default games_iframe;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst PlayGame = (iframe) => {\r\n  return (\r\n    <Grid container justify={\"center\"} spacing={3}>\r\n      <div\r\n        id=\"divPlayGame\"\r\n        style={{ margin: \"auto\", paddingBottom: \"10px\" }}\r\n        dangerouslySetInnerHTML={{ __html: iframe.iframe }}\r\n      ></div>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PlayGame;\r\n","import React, { useState } from \"react\";\r\nimport games_iframe from \"./../../data/games_iframe\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport PlayGame from \"./PlayGame\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(3),\r\n    width: 345,\r\n  },\r\n  media: {\r\n    height: 300,\r\n    widht: 500,\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n\r\nconst Games = () => {\r\n  const [gameiframe, setgameiframe] = useState(\"\");\r\n\r\n  const onButtonClick = (iframe) => {\r\n    setgameiframe(iframe);\r\n    const elmntToView = document.getElementById(\"divPlayGame\");\r\n\r\n    setTimeout(function () {\r\n      elmntToView.scrollIntoView();\r\n    }, 1000);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <PlayGame iframe={gameiframe} />\r\n      <PlayGame />\r\n      <Grid container justify={\"center\"} spacing={3}>\r\n        {games_iframe.map((data, key) => {\r\n          return (\r\n            <Grid key={key} item xs={12} sm={12} lg={3}>\r\n              <div>\r\n                <Card>\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      className={classes.media}\r\n                      image={data.imgsrc}\r\n                      title={data.name}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h2\"\r\n                        className={classes.title}\r\n                      >\r\n                        {data.name}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        {data.description}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions>\r\n                    <Button\r\n                      size=\"small\"\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={() => onButtonClick(data.iframe)}\r\n                    >\r\n                      Play\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </div>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Games;\r\n","import React from \"react\";\r\nimport Games from \"./Games\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"lg\" className=\"container\">\r\n        <Games />\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport logo from \"./../../assets/img/kidZone_logo.png\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <div>\r\n      <Grid container direction=\"row\">\r\n        <img\r\n          src={logo}\r\n          alt=\"kidszone\"\r\n          style={{ width: \"300px\", margin: \"auto\", display: \"block\" }}\r\n        />\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  spacing: 4,\r\n  palette: {\r\n    primary: { main: \"#467fcf\" },\r\n    background: {\r\n      default: \"#EDE7E3\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\nimport Dashboard from \"./components/Layout/Dashboard\";\nimport Nav from \"./components/Layout/Nav\";\n\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"./theme\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Nav />\n        <Dashboard />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}